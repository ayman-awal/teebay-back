// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                      Int       @id @default(autoincrement())
  firstName               String
  lastName                String
  address                 String
  email                   String     @unique
  phoneNumber             String     @unique
  password                String
  product                 Product[]     @relation("UserProducts")
  primaryTransactions     Transaction[] @relation("primaryUserTransactions")
  secondaryTransactions   Transaction[] @relation("secondaryUserTransactions")
}

model Product {
  id                Int     @id @default(autoincrement())
  title             String
  isAvailable       Boolean @default(true)
  categories        String
  description       String
  purchasePrice     String
  rentPrice         String
  datePosted        DateTime
  rentFrequency     String
  user              User    @relation("UserProducts", fields: [userId], references: [id])
  userId            Int
  transaction       Transaction[] @relation("ProductTransactions")
}

model Transaction {
  id                 Int @id @default(autoincrement())
  transactionType    String
  rentFrom           DateTime?
  rentTo             DateTime?
  product            Product @relation("ProductTransactions", fields: [productId], references: [id])
  productId          Int
  primaryUser        User @relation("primaryUserTransactions", fields: [primaryUserId], references: [id])
  primaryUserId      Int
  secondaryUser      User @relation("secondaryUserTransactions", fields: [secondaryUserId], references: [id])
  secondaryUserId    Int
}
